worker_processes 4;
 
events { worker_connections 1024; }
 
http {
    sendfile on;
    #upstream para users_servers
    upstream users_servers { 
        server bookproject_usersservice_1:3000; 
    } 
    #Supongamos que queremos cambiar el microservicio UsersService a una nueva versión y mantendremos temporalmente dos rutas hasta que todos los consumidores de API sean completamente migrados a la nueva versión de la API
    upstream users_servers_v2 {
      server bookproject_usersservice_v2_1:3000;
    }
    #upstream para orchestrator_servers
    upstream orchestrator_servers { 
        server bookproject_orchestrator_news_service_1:5000; 
    }

    upstream recommendation_servers {
        server bookproject_recommendation_service_1:5000;
    }
 
 #como tenemos diferentes upstreams crearemos diferentes ubicaciones. Esto nos da más flexibilidad de configuración y resuelve el problema de la colisión de rutas. Ahora, tenemos una ubicación que redirige las peticiones a los users_servers upstream, y una ubicacion que redirige las peticiones a los orchestrator_servers upstream
    server {
        listen 80;
 
        location /users/v1/ { 
            proxy_pass         http://users_servers/; 
            proxy_redirect     off; 
            proxy_set_header   Host $host; 
            proxy_set_header   X-Real-IP $remote_addr; 
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for; 
            proxy_set_header   X-Forwarded-Host $server_name; 
        } 

        location /users/v2/ {
        proxy_pass         http://users_servers_v2/;
        ...
      }
        
        location /news/v1/{ 
            proxy_pass         http://orchestrator_servers/; 
            proxy_redirect     off; 
            proxy_set_header   Host $host; 
            proxy_set_header   X-Real-IP $remote_addr; 
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for; 
            proxy_set_header   X-Forwarded-Host $server_name; 
        }

         location /recommendation/v1/ {
            proxy_pass         http://recommendation_servers/;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
        }
    }
}